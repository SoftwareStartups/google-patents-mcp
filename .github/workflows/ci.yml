name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

jobs:
  lint-and-typecheck:
    name: Lint & Typecheck
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js Environment
        uses: ./.github/actions/setup-node
        with:
          node-version: "20.x"
          install-deps: "true"
          build-project: "false"

      - name: Check code formatting
        run: npm run format:check

      - name: Lint code
        run: npm run lint

      - name: Type check
        run: npm run typecheck

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js Environment
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node-version }}
          install-deps: "true"
          build-project: "false"

      - name: Run unit tests
        run: npm run test:unit

      - name: Upload coverage reports
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v5
        with:
          name: coverage-report
          path: coverage/
          if-no-files-found: ignore
          retention-days: 1
          compression-level: 6

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, unit-tests]

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js Environment
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node-version }}
          install-deps: "true"
          build-project: "true"

      - name: Upload build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v5
        with:
          name: build-output
          path: build/
          retention-days: 1
          compression-level: 6

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [build]

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Download build artifacts
        uses: actions/download-artifact@v5
        with:
          name: build-output
          path: build/

      - name: Setup Node.js Environment
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node-version }}
          install-deps: "true"
          build-project: "false"

      - name: Run integration tests
        env:
          SERPAPI_API_KEY: ${{ secrets.SERPAPI_API_KEY }}
          LOG_LEVEL: error
        run: npm run test:integration

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: integration-test-logs-node-${{ matrix.node-version }}
          path: |
            *.log
            /tmp/google-patents-server.log
          if-no-files-found: ignore
          retention-days: 1
          compression-level: 6
